Partimos de una clase para saber si el usuario tiene dinero en el banco para realizar el pago de sus deudas

	class UserService
	{
		public bool PayMyDebts(string userID)
		{
			var success = false;

			// El usuario necesita saber si tiene dinero en el banco para cubrir su deuda del mes
			if (HasMoneyAtBank(userID))
			{
				// El usuario va a pagar sus deudas para el mes actual
				success = true;
			}

			return success;
		}

		public bool HasMoneyAtBank(string userId)
		{
			return true;
		}
	}

El problema aquí es que hemos combinado 2 responsabilidades

Una forma de refactorizar el código sería la siguiente:

	class UserService
	{
		private readonly BankService _bankService;

		public UserService(BankService bankService)
		{
			_bankService = bankService;
		}

		public bool PayMyDebts(string userID)
		{
			var success = false;

			// El usuario necesita saber si tiene dinero en el banco para cubrir su deuda del mes
			if (_bankService.HasMoneyAtBank(userID))
			{
				// El usuario va a pagar sus deudas para el mes actual
				success = true;
			}

			return success;
		}

	}

	class BankService
	{
		public bool HasMoneyAtBank(string userId)
		{
			return true;
		}
	}

De esta hemos separado ambas responsabilidades y cada una puede ser modificada sin afectar a la otra.